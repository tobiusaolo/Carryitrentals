# Production Dockerfile for CarryIT Backend
FROM python:3.12-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DATABASE_URL="postgresql://carritit_user:byhMgKBeVJ9v6MqB6rFEJmNLEnjIKUT0@dpg-d3udc4be5dus739jr1o0-a.oregon-postgres.render.com/carritit" \
    SECRET_KEY="carryit-production-secret-key-2024-secure" \
    BACKEND_URL="https://carryit-backend.onrender.com" \
    FRONTEND_URL="https://carryit-frontend.onrender.com" \
    AFRICAS_TALKING_API_KEY="atsk_bcdef9936a178337878f9f608f54ed5758e5bdbc2e10237f8e6db70db012cafbdae62fd7" \
    AFRICAS_TALKING_USERNAME="phosai"

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    postgresql-client \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create upload directories
RUN mkdir -p uploads/unit_images uploads/rental_images uploads/airbnb_images uploads/documents uploads/maintenance_images

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/', timeout=5)" || exit 1

# Run the application
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

